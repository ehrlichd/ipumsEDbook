[["unit1.html", "Chapter 1 Unit 1: The Basics 1.1 Week 1: Intro to R, data types, data structures 1.2 Week 2: Plotting Data 1.3 Week 3: Statisitcal testing of simple data sets 1.4 Week 4: Relationships between variables in simple data sets 1.5 Week 5: 1.6 Intro to R/RStudio 1.7 Reading Data / Distributions", " Chapter 1 Unit 1: The Basics 1.1 Week 1: Intro to R, data types, data structures 1.1.1 Intro to R 1.1.2 Data Types Data is defined as “facts and statistics collected together for reference or analysis.” This is from the internet and needs to be our words As seen in Figure 1.1, there are two types of data: quantitative and qualitative. 1.1.3 Data Structures 1.2 Week 2: Plotting Data 1.2.1 Normal Distributions First we’ll generate a normal distribution with the rnorm() function. This takes 3 arguments: n, mean, sd, which you can see filled in below. While we could print out a list of all these values, it’s not easy to understand a list of numbers normal_dist &lt;- rnorm(n = 100, ## 100 samples mean = 10, ## with a mean of 10 sd = 1 ## and a standard deviation of 1 ) normal_dist ## [1] 9.884120 10.418187 9.486954 10.081521 9.099549 10.600962 11.180761 ## [8] 9.755042 10.728535 9.612714 10.256490 10.715195 10.315489 9.473617 ## [15] 11.662231 8.132190 9.312744 10.506850 9.481237 10.562680 11.396598 ## [22] 8.634232 10.859780 9.590872 10.403037 10.361097 9.922486 10.691373 ## [29] 11.616673 10.582918 10.763476 9.893372 10.982175 11.511166 9.493631 ## [36] 10.464214 11.840655 10.623305 10.545686 10.463679 9.206828 10.400561 ## [43] 9.694152 9.707894 10.175858 9.419030 9.273655 10.904799 7.404722 ## [50] 7.344172 11.403661 9.272458 10.289780 8.714176 8.832113 10.815729 ## [57] 9.394216 11.135970 11.323845 11.289032 9.596247 8.985435 9.826195 ## [64] 9.621148 10.909975 10.647734 9.934720 9.906234 10.887281 8.594194 ## [71] 10.450755 10.959571 10.666295 10.797573 9.975733 11.188053 9.449970 ## [78] 11.421477 9.933551 8.021793 9.678413 10.281204 10.408145 9.439964 ## [85] 10.893647 9.630950 11.174907 11.333065 11.011356 10.779558 10.956930 ## [92] 8.758179 10.728845 10.509436 10.547267 10.103059 9.837871 10.209878 ## [99] 8.481586 11.064220 Another better way to look at data would be to visualize or plot it. One way to to that is with a histogram, which groups continuous values into bins, then plots the frequency for each bin. In R, we use the hist() function to plot a histogram of data. We can (try to) control the number of bins with the breaks argument, but note that it doesn’t always match up. The hist() function will adjust based on the distribution of the data. hist(normal_dist,breaks = 5) Another way to visualize this would be with a d 1.2.2 What is normal? 1.2.2.1 Quantitative summaries 5num summary * Min, 25th percentile, median, 75th percentile, Max tab_normal_dist &lt;- summary(normal_dist) We can print the table in R by calling its name. tab_normal_dist ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 7.344 9.595 10.338 10.155 10.802 11.841 Mean, standard deviation 1.2.2.2 Meaningful Comparisons How to compare apples to oranges? Standardize the units / standardize the data data1 &lt;- rnorm(n=1000, mean = 100, sd = 10) data2 &lt;- rnorm(n=1000, mean = 60, sd = 25) Are these the same distribution? Any issues?? layout(matrix(1:2, ncol = 2)) hist(data1) hist(data2) total_range &lt;- range(data1, data2) Are they the same? layout(matrix(1:2, ncol = 2)) hist(data1, xlim = total_range) hist(data2, xlim = total_range) Numerically / tabularly Often times its important to tables of summary statistics norm_comp_tab &lt;- rbind(summary(data1), summary(data2)) norm_comp_tab ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## [1,] 71.55987 93.79896 100.54960 100.30774 107.02972 127.7964 ## [2,] -20.19487 41.25138 59.15578 58.65247 75.65273 162.4843 Making the table a little nicer. Also an example of conditional programming. rownames(norm_comp_tab) ## they&#39;re null ## NULL if(is.null(rownames(norm_comp_tab))){ rownames(norm_comp_tab) &lt;- c(&quot;data1&quot;, &quot;data2&quot;) } When working with Rmarkdown we can take advantage of knitr and pandoc to nice looking tables even easier. knitr::kable(norm_comp_tab) Min. 1st Qu. Median Mean 3rd Qu. Max. data1 71.55987 93.79896 100.54960 100.30774 107.02972 127.7964 data2 -20.19487 41.25138 59.15578 58.65247 75.65273 162.4843 How transform the data Simple transformation (multiply all values by 100) * to convert units * other examples? Complex transformations * log-transformation (DEE: not a fan) * z-scores (DEE: a better option) Why transform the data? * Real world applications? * Is it always appropriate to transform data? 1.2.3 Skews What to do if the data are not normal? 1.3 Week 3: Statisitcal testing of simple data sets 1.3.1 t-tests, ANOVA, chi2 1.4 Week 4: Relationships between variables in simple data sets 1.4.1 Correlation, Linear Regression 1.4.1.1 Simple LM 1.4.1.2 Complex LM 1.4.2 Genearlized Linear Model 1.5 Week 5: For now, I have 3 main chapters for each of the main sections: * Basics of data science / R 1 * Applications/critiques using IPUMS data 3 * Student-driven projects 4 Each of these Chapters contains multiple sections. We’ll likely want to break these sections out into their own .Rmd files as they get fleshed out. For now, I’ll try to keep the abundance of files limited. NOTE: As these actually get filled out, we will probably want to insert different parts to the book (EG, the content of Unit 1 is covered in Part I). * Declare parts with # (PART) Part I {-} immediately before the first chapter # it contains. Topics to include: * What is data? * Everything can be data * How do we interpret data * Tables * Plots * Univariate distributions * What can they tell us * Multi-modality in distributions * Categorical vs continuous data * Don’t need to get ahead of this yet * Add in a grouping category - multi state/multi-national dataset * Ttest / anova Type of Data: Age distributions Specifically generate a dataset with old/young folks over-represented to highlight a bimodal distribution Start with single state/country Add a second state/country to demo ttest Add more to demo anova Alternatively, income by education level - may be more interesting/relevant to college students (or depressing) 1.6 Intro to R/RStudio 1.7 Reading Data / Distributions 1.7.1 What is a normal distribution 1.7.1.1 How normal is it? show increasingly unclear examples of normal vs not introduce tests of normality 1.7.1.2 Measuring normality - single sample reinforce [concept of statistical] normality is a value from a sample? - one way ttest something about tails 1.7.1.3 comparing normality - two saples standard / two-way t test 1.7.1.4 comparing more than two - ANOVA #Glossary Data Quantitative Qualitative Discrete Continuous Nominal Ordinal "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
